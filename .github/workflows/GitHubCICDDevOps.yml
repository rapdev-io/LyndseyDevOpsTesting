# This workflow uses ServiceNow custom actions that are certified by ServiceNow.

name: CICD GitHub workflow 2

on: 
  workflow_dispatch:
  push:
      branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  #   types: [opened, synchronize, reopened]

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean compile

  test:
    name: 'Test'
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: ServiceNow DevOps Unit Test Results
      run: |
          curl -X POST \
          -H "Content-Type: application/json" \
          -H "Authorization: sn_devops.DevOpsToken ${{ secrets.SN_ORCHESTRATION_TOOL_ID}}:${{ secrets.SN_DEVOPS_TOKEN}}" \
          -d '{"toolId":"${{ secrets.SN_ORCHESTRATION_TOOL_ID }}","buildNumber":"${{ github.run_number }}","buildId":"${{ github.run_id }}","attemptNumber":"${{ github.run_attempt }}","stageName":"${{ github.job }}","workflow":"${{ github.workflow }}","repository":"${{ github.repository }}","testSummaries":[{"name":"TestSummary","passedTests":183,"failedTests":0,"skippedTests":0,"ignoredTests":0,"blockedTests":0,"totalTests":183,"startTime":"","endTime":"","duration":0,"testType":"JUnit","suites":[]}],"fileContent":"","errorMessage":"","testType":"JUnit"}'  \
          https://rapdeviodemo1.service-now.com/api/sn_devops/v2/devops/tool/test?toolId=280b2869c35adad097085e0fb001318e

  # sonarScan:
  #     name: 'Sonar Scan'
  #     needs: build
  #     runs-on: ubuntu-latest
  #     steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4.0.0
      
  #     - name: ServiceNow DevOps Sonar Scan Results
  #       uses: ServiceNow/servicenow-devops-sonar@v3.1.0
  #       with:
  #         devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN}}
  #         instance-url: ${{ secrets.SN_INSTANCE_URL }}
  #         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
  #         context-github: ${{ toJSON(github) }}
  #         job-name: 'Build'
  #         sonar-host-url: ${{ secrets.SONAR_URL }}
  #         sonar-project-key: ${{ secrets.SONAR_PROJECT_KEY }}
        
  registerArtifact:
    name: 'Register Artifact'
    needs: test #[test, sonarScan]
    runs-on: ubuntu-latest
    steps:
    - name: ServiceNow DevOps Register Artifact  
      uses: ServiceNow/servicenow-devops-register-artifact@v3.1.0
      with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          job-name: 'Register Artifact'
          context-github: ${{ toJSON(github) }}
          artifacts: '[{"name": "app-devops-cicd.jar","version": "1.${{ github.run_number }}","semanticVersion": "1.${{ github.run_number }}.0","repositoryName": "${{ github.repository }}"}]'
  
  registerpackage:
      name: Register Package
      needs: registerArtifact
      runs-on: ubuntu-latest
      steps:
        - name: ServiceNow Register Package
          uses: ServiceNow/servicenow-devops-register-package@v3.1.0
          with:
            devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
            instance-url: ${{ secrets.SN_INSTANCE_URL }}
            tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
            context-github: ${{ toJSON(github) }}
            job-name: 'Register Package'
            artifacts: '[{"name": "app-devops-cicd.jar","version": "1.${{ github.run_number }}","semanticVersion": "1.${{ github.run_number }}.0","repositoryName": "${{ github.repository }}"}]'
            package-name: 'registerpackage.war'
    
  pre-deploy:
    needs: registerpackage
    runs-on: ubuntu-latest
    steps:
      - name: ServiceNow DevOps Change Automation
        uses: ServiceNow/servicenow-devops-change@v4.0.0
        with:
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          job-name: ${{ github.job }}
          context-github: ${{ toJSON(github) }}
          change-request: '{}'
          deployment-gate: '{"environment":"Production","jobName":"My deploy test"}'
        
  
  deploy:
    name: My deploy test
    needs: pre-deploy
    environment: Production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
      - name: Run a one-line script
        run: echo Hello, world!
      - name: ServiceNow DevOps Post Unit Test Results
        run: |
            curl -X POST \
            -H "Content-Type: application/json" \
            -H "Authorization: sn_devops.DevOpsToken ${{ secrets.SN_ORCHESTRATION_TOOL_ID}}:${{ secrets.SN_DEVOPS_TOKEN}}" \
            -d '{"toolId":"${{ secrets.SN_ORCHESTRATION_TOOL_ID }}","artifacts":[{"name":"com:customactiondemo","version":"1.${{ github.run_number }}","semanticVersion":"1.${{ github.run_number }}.0","repositoryName":"${{ github.repository }}"}],"buildNumber":"${{ github.run_number }}","buildId":"${{ github.run_id }}","attemptNumber":"${{ github.run_attempt }}","stageName":"${{ github.job }}","workflow":"${{ github.workflow }}","repository":"${{ github.repository }}","testSummaries":[{"name":"TestSummary","passedTests":183,"failedTests":0,"skippedTests":0,"ignoredTests":0,"blockedTests":0,"totalTests":183,"startTime":"","endTime":"","duration":0,"testType":"JUnit","suites":[]}],"fileContent":"","errorMessage":"","testType":"JUnit","packages": [{"name": "registerpackage-${{ github.run_number }}"}], }'  \
            https://rapdeviodemo1.service-now.com/api/sn_devops/v2/devops/tool/test?toolId=280b2869c35adad097085e0fb001318e
