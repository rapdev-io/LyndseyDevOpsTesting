# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: 'Build'
  jobs:
  - job: 'Build'
    steps:
    - script: echo Build
    - task: ServiceNow.vss-services-servicenow-devops.serviceNowDevOps-agent-artifact-registration.ServiceNow-DevOps-Agent-Artifact-Registration@1
  displayName: 'ServiceNow DevOps Agent Artifact Registration'
  inputs:
    connectedServiceName: x
    artifactsPayload: |
     {
        "artifacts": [
           {
              "name": "testName",
              "version": "1.$(Build.BuildId)",
              "semanticVersion": "1.$(Build.BuildId).0",
              "repositoryName": "DevOpsWorkshop"
           }
        ]
     }

- stage: 'Test'
  jobs:
  - job: 'Unit_Tests'
    steps:
    - script: echo Unit Tests

  - job: 'Checkmarx_Scan'
    dependsOn: 'Unit_Tests'
    steps:
    - script: echo Checkmarx Scan

- stage: 'Deploy'
  jobs:
  - job: 'UAT_Deploy'
    steps:
    - script: echo UAT Deploy
    - task: ServiceNow.vss-services-servicenow-devops.serviceNowDevOps-agent-package-registration.ServiceNow-DevOps-Agent-Package-Registration@1
    displayName: 'ServiceNow DevOps Agent Package Registration'
    inputs:
        connectedServiceName: x
        packageName: 'Package 1'
        artifactsPayload: |
        {
                "artifacts": [
                    {
                        "name": "testName",
                         "version": "1.$(Build.BuildId)",
                         "semanticVersion": "1.$(Build.BuildId).0",
                        "repositoryName": "DevOpsWorkshop"
                    }
                ]
            }

  - job: 'Production_Deploy'
    #pool: server
    dependsOn: 'UAT_Deploy'
    steps:
    - script: echo Production Deploy
